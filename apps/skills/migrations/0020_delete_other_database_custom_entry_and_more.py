# Generated by Django 5.1.7 on 2025-03-17 18:26

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('skills', '0019_programminglanguage_custom_icon_and_more'),
    ]

    operations = [
        migrations.DeleteModel(
            name='Other',
        ),
        migrations.AddField(
            model_name='database',
            name='custom_entry',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='database',
            name='custom_icon',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='framework',
            name='custom_icon',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='softskills',
            name='custom_entry',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='softskills',
            name='custom_icon',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='tools',
            name='custom_entry',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='tools',
            name='custom_icon',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='framework',
            name='custom_entry',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='programminglanguage',
            name='level',
            field=models.IntegerField(default=0, help_text='Give the third technology used level (35-100)', validators=[django.core.validators.MinValueValidator(35), django.core.validators.MaxValueValidator(100)]),
        ),
    ]
