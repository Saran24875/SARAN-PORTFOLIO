# Generated by Django 5.1.7 on 2025-03-17 17:22

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('skills', '0017_alter_database_level_alter_database_select_database_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='framework',
            name='custom_entry',
            field=models.CharField(blank=True, help_text="Specify if 'Other' is selected", max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='programminglanguage',
            name='custom_entry',
            field=models.CharField(blank=True, help_text="Specify if 'Other' is selected", max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='programminglanguage',
            name='name',
            field=models.CharField(choices=[('Python', 'Python'), ('Java', 'Java'), ('C', 'C'), ('Cpp', 'C++'), ('Javascript', 'JavaScript'), ('Typescript', 'TypeScript'), ('Csharp', 'C#'), ('Swift', 'Swift'), ('Kotlin', 'Kotlin'), ('Go', 'Go'), ('Rust', 'Rust'), ('Dart', 'Dart'), ('Ruby', 'Ruby'), ('Php', 'PHP'), ('R', 'R'), ('Julia', 'Julia'), ('Sql', 'SQL'), ('Plsql', 'PL/SQL'), ('Tsql', 'T-SQL'), ('Graphql', 'GraphQL'), ('Perl', 'Perl'), ('Lua', 'Lua'), ('Haskell', 'Haskell'), ('Clojure', 'Clojure'), ('Scala', 'Scala'), ('Erlang', 'Erlang'), ('Elixir', 'Elixir'), ('Fsharp', 'F#'), ('Ocaml', 'OCaml'), ('Prolog', 'Prolog'), ('Lisp', 'Lisp'), ('Scheme', 'Scheme'), ('Fortran', 'Fortran'), ('Cobol', 'COBOL'), ('Basic', 'BASIC'), ('Smalltalk', 'Smalltalk'), ('Ada', 'Ada'), ('Algol', 'ALGOL'), ('Pascal', 'Pascal'), ('Modula2', 'Modula-2'), ('Vhdl', 'VHDL'), ('Verilog', 'Verilog'), ('Jcl', 'JCL'), ('Xquery', 'XQuery'), ('Postscript', 'PostScript'), ('Bash', 'Bash'), ('Powershell', 'PowerShell'), ('Nim', 'Nim'), ('Zig', 'Zig'), ('Gams', 'GAMS'), ('Idl', 'IDL'), ('Latex', 'LaTeX'), ('Brainfuck', 'Brainfuck'), ('Whitespace', 'Whitespace'), ('Intercal', 'INTERCAL'), ('Malbolge', 'Malbolge'), ('Piet', 'Piet'), ('Befunge', 'Befunge'), ('Qsharp', 'Q#'), ('Qiskit', 'Qiskit'), ('Quipper', 'Quipper'), ('Silq', 'Silq'), ('Cirq', 'Cirq'), ('Other', 'Other')], max_length=100, null=True),
        ),
    ]
